name: Backend and Frontend CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # Job to test the Django backend
  test-django-app:
    name: Run Django Tests
    runs-on: ubuntu-latest 
    strategy:
      matrix:
        python-version: [3.12.6]
    services:
      postgres:
        image: postgres:13
        ports:
          - 5433:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: Plu13064005!
          POSTGRES_DB: coffee_tracker_db
    steps:
      - name: Checkout code
        uses: actions/checkout@v3


      - name: Debug DATABASE_URL
        run: echo "DATABASE_URL=${DATABASE_URL}"

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..30}; do
            nc -zv localhost 5433 && break || sleep 1
          done

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12.6

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install -r backend/requirements.txt

      - name: Run tests
        env:
          DATABASE_URL: postgres://postgres:Plu13064005!@localhost:5432/coffee_tracker_db
        run: python3 backend/manage.py test

  # Job to measure test coverage and upload results
  coverage:
    name: Run Coverage and Upload to Codecov
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12.6

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip install -r backend/requirements.txt
          pip install coverage  # ✅ Ensure coverage is installed

      - name: Run tests with coverage
        run: |
          coverage run --source=backend backend/manage.py test  # ✅ This will now work

      - name: Generate coverage report
        run: coverage xml

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
  
  # Job to test the React frontend
  frontend-tests:
    name: Run Frontend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Ensures all files are checked out


      - name: Debug Frontend Directory
        run: ls -la my-webapp/frontend

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install frontend dependencies
        working-directory: my-webapp/frontend
        run: npm install

      - name: Run frontend tests
        working-directory: mywebapp/frontend
        run: npm test -- --watchAll=false
